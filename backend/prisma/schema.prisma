// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  name     String
  password String
  nickname String  @unique
  is_admin Boolean

  forms     Form[]
  questions User_has_Questions[]

  @@map("users")
}

model Phase {
  id     String @id @default(uuid())
  number Int    @unique
  name   String

  questions Question[]

  @@map("phases")
}

model Question {
  id                 String  @id @default(uuid())
  text               String
  text_if_correct    String
  text_if_incorrect  String
  number             Int     @unique
  avatar             String?
  image_upper_right  String?
  image_bottom_right String?
  image_bottom_left  String?
  already_answered   Boolean

  phase    Phase  @relation(fields: [phase_id], references: [id], onDelete: Cascade)
  phase_id String

  users        User_has_Questions[]
  alternatives Alternative[]

  @@map("questions")
}

model User_has_Questions {
  user        User     @relation(fields: [user_id], references: [id])
  user_id     String
  question    Question @relation(fields: [question_id], references: [id])
  question_id String

  @@id([user_id, question_id])
  @@map("user_has_questions")
}

model Alternative {
  id            String  @id @default(uuid())
  letter        String
  text          String
  true_or_false Boolean

  question    Question @relation(fields: [question_id], references: [id], onDelete: Cascade)
  question_id String

  @@map("alternatives")
}

model Form {
  id   String @id @default(uuid())
  text String

  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  @@map("forms")
}
